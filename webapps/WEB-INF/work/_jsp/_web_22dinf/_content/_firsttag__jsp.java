/*
 * JSP generated by Resin Professional 4.0.38 (built Tue, 17 Dec 2013 09:49:45 PST)
 */

package _jsp._web_22dinf._content;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;

public class _firsttag__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = new TagState();

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_state.release();
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html; charset=utf-8");
    com.jrj.tag.example.FirstTag _jsp_FirstTag_0 = null;
    com.jrj.tag.example.IfTag _jsp_IfTag_1 = null;
    com.jrj.tag.example.ForEachTag _jsp_ForEachTag_2 = null;
    com.jrj.tag.example.FirstTag _jsp_FirstTag_3 = null;

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
	String path = request.getContextPath();
	ArrayList<String> values = new ArrayList<String>();
	values.add("zhouming");
	values.add("xiaoshou");
	values.add("minggou");
	//pageContext.setAttribute("values", values);

    out.write(_jsp_string1, 0, _jsp_string1.length);
    _jsp_FirstTag_0 = _jsp_state.get_jsp_FirstTag_0(pageContext, _jsp_parent_tag);
    int _jsp_end_7 = _jsp_FirstTag_0.doEndTag();
    if (_jsp_end_7 == javax.servlet.jsp.tagext.Tag.SKIP_PAGE)
      return;
    out.write(_jsp_string2, 0, _jsp_string2.length);
    _jsp_IfTag_1 = _jsp_state.get_jsp_IfTag_1(pageContext, _jsp_parent_tag);
    _jsp_IfTag_1.setCondition(true);
    int _jspEval10 = _jsp_IfTag_1.doStartTag();
    if (_jspEval10 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      out.write(_jsp_string3, 0, _jsp_string3.length);
    }
    out.write(_jsp_string4, 0, _jsp_string4.length);
    _jsp_ForEachTag_2 = _jsp_state.get_jsp_ForEachTag_2(pageContext, _jsp_parent_tag);
    _jsp_ForEachTag_2.setItems((java.util.Collection) _caucho_expr_0.evalObject(_jsp_env));
    int _jspEval14 = _jsp_ForEachTag_2.doStartTag();
    if (_jspEval14 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      _jsp_ForEachTag_2.setBodyContent((javax.servlet.jsp.tagext.BodyContent) null);
      do {
        out.write(_jsp_string5, 0, _jsp_string5.length);
        _jsp_FirstTag_3 = _jsp_state.get_jsp_FirstTag_3(pageContext, _jsp_parent_tag);
        int _jsp_end_18 = _jsp_FirstTag_3.doEndTag();
        if (_jsp_end_18 == javax.servlet.jsp.tagext.Tag.SKIP_PAGE)
          return;
        out.write(_jsp_string5, 0, _jsp_string5.length);
        _caucho_expr_1.print(out, _jsp_env, false);
        out.write(_jsp_string2, 0, _jsp_string2.length);
      } while (_jsp_ForEachTag_2.doAfterBody() == javax.servlet.jsp.tagext.IterationTag.EVAL_BODY_AGAIN);
    }
    out.write(_jsp_string6, 0, _jsp_string6.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -1257324557874484737L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("WEB-INF/content/FirstTag.jsp"), 2870829014013292668L, false);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("WEB-INF/tagFile/example.tld"), 9191147120533934090L, false);
    _caucho_depends.add(depend);
    _caucho_depends.add(new com.caucho.make.ClassDependency("com.jrj.tag.example.FirstTag", -4762892016839523548L));
    _caucho_depends.add(new com.caucho.make.ClassDependency("com.jrj.tag.example.IfTag", -8734288332689478435L));
    _caucho_depends.add(new com.caucho.make.ClassDependency("com.jrj.tag.example.ForEachTag", -6494414292882459496L));
  }

  static {
    try {
    } catch (Exception e) {
      e.printStackTrace();
      throw new RuntimeException(e);
    }
  }

  final static class TagState {
    private com.jrj.tag.example.FirstTag _jsp_FirstTag_0;

    final com.jrj.tag.example.FirstTag get_jsp_FirstTag_0(PageContext pageContext, javax.servlet.jsp.tagext.JspTag _jsp_parent_tag) throws Throwable
    {
      if (_jsp_FirstTag_0 == null) {
        _jsp_FirstTag_0 = new com.jrj.tag.example.FirstTag();
        _jsp_FirstTag_0.setPageContext(pageContext);
        if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.Tag)
          _jsp_FirstTag_0.setParent((javax.servlet.jsp.tagext.Tag) _jsp_parent_tag);
        else if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.SimpleTag)
          _jsp_FirstTag_0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jsp_parent_tag));
        else
          _jsp_FirstTag_0.setParent((javax.servlet.jsp.tagext.Tag) null);
      }

      return _jsp_FirstTag_0;
    }
    private com.jrj.tag.example.IfTag _jsp_IfTag_1;

    final com.jrj.tag.example.IfTag get_jsp_IfTag_1(PageContext pageContext, javax.servlet.jsp.tagext.JspTag _jsp_parent_tag) throws Throwable
    {
      if (_jsp_IfTag_1 == null) {
        _jsp_IfTag_1 = new com.jrj.tag.example.IfTag();
        _jsp_IfTag_1.setPageContext(pageContext);
        if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.Tag)
          _jsp_IfTag_1.setParent((javax.servlet.jsp.tagext.Tag) _jsp_parent_tag);
        else if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.SimpleTag)
          _jsp_IfTag_1.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jsp_parent_tag));
        else
          _jsp_IfTag_1.setParent((javax.servlet.jsp.tagext.Tag) null);
      }

      return _jsp_IfTag_1;
    }
    private com.jrj.tag.example.ForEachTag _jsp_ForEachTag_2;

    final com.jrj.tag.example.ForEachTag get_jsp_ForEachTag_2(PageContext pageContext, javax.servlet.jsp.tagext.JspTag _jsp_parent_tag) throws Throwable
    {
      if (_jsp_ForEachTag_2 == null) {
        _jsp_ForEachTag_2 = new com.jrj.tag.example.ForEachTag();
        _jsp_ForEachTag_2.setPageContext(pageContext);
        if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.Tag)
          _jsp_ForEachTag_2.setParent((javax.servlet.jsp.tagext.Tag) _jsp_parent_tag);
        else if (_jsp_parent_tag instanceof javax.servlet.jsp.tagext.SimpleTag)
          _jsp_ForEachTag_2.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jsp_parent_tag));
        else
          _jsp_ForEachTag_2.setParent((javax.servlet.jsp.tagext.Tag) null);
        _jsp_ForEachTag_2.setVar("val");
      }

      return _jsp_ForEachTag_2;
    }
    private com.jrj.tag.example.FirstTag _jsp_FirstTag_3;

    final com.jrj.tag.example.FirstTag get_jsp_FirstTag_3(PageContext pageContext, javax.servlet.jsp.tagext.JspTag _jsp_parent_tag) throws Throwable
    {
      if (_jsp_FirstTag_3 == null) {
        _jsp_FirstTag_3 = new com.jrj.tag.example.FirstTag();
        _jsp_FirstTag_3.setPageContext(pageContext);
        _jsp_FirstTag_3.setParent((javax.servlet.jsp.tagext.Tag) _jsp_ForEachTag_2);
      }

      return _jsp_FirstTag_3;
    }

    void release()
    {
      if (_jsp_FirstTag_0 != null)
        _jsp_FirstTag_0.release();
      if (_jsp_IfTag_1 != null)
        _jsp_IfTag_1.release();
      if (_jsp_ForEachTag_2 != null)
        _jsp_ForEachTag_2.release();
      if (_jsp_FirstTag_3 != null)
        _jsp_FirstTag_3.release();
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      manager.addTaglibFunctions(_jsp_functionMap, "em", "http://com.jrj.tag/em");
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
      _caucho_expr_0 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${values}");
      _caucho_expr_1 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${val}");
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }
  private static com.caucho.el.Expr _caucho_expr_0;
  private static com.caucho.el.Expr _caucho_expr_1;

  private final static char []_jsp_string2;
  private final static char []_jsp_string6;
  private final static char []_jsp_string4;
  private final static char []_jsp_string3;
  private final static char []_jsp_string0;
  private final static char []_jsp_string5;
  private final static char []_jsp_string1;
  static {
    _jsp_string2 = "\r\n	".toCharArray();
    _jsp_string6 = "\r\n	\r\n</body>\r\n</html>\r\n\r\n".toCharArray();
    _jsp_string4 = "\r\n	\r\n	".toCharArray();
    _jsp_string3 = "\r\n		if is validate\r\n	".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n".toCharArray();
    _jsp_string5 = "\r\n		".toCharArray();
    _jsp_string1 = "\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\r\n<head>\r\n</head>\r\n<body>\r\n	".toCharArray();
  }
}
